{"ast":null,"code":"var _jsxFileName = \"/Users/mayaesar/Documents/concordia-bootcamps/Projects/project-GROUP-e-commerce/client/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const [typedValue, setTypedValue] = useState('');\n  const [error, setError] = useState(null);\n  const [companyArray, setCompanyArray] = useState([]);\n  const companies = [];\n  const [brandArray, setBrandArray] = useState([]);\n  const brands = []; //randomly give 5 companies to be displayed for the brands dropdown\n\n  const getRandomNames = () => {\n    const random = [];\n    random.push(companies[Math.floor(Math.random() * companies.length)]);\n    random.push(companies[Math.floor(Math.random() * companies.length)]);\n    random.push(companies[Math.floor(Math.random() * companies.length)]);\n    random.push(companies[Math.floor(Math.random() * companies.length)]);\n    random.push(companies[Math.floor(Math.random() * companies.length)]);\n    random.forEach(element => {\n      const item = /*#__PURE__*/_jsxDEV(NavLinks, {\n        to: `/brands/${element.id}`,\n        children: element.name\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }, this);\n\n      setCompanyArray(arr => [...arr, item]);\n    });\n  }; //this will get all of the names and id of the companies, then store it in the companies array\n  // then do the same for the products but creates an array with categories\n\n\n  useEffect(() => {\n    const brand = () => {\n      fetch('/api/get-companies').then(res => res.json()).then(data => {\n        data.data.map(company => {\n          const info = {\n            name: company.name,\n            id: company._id\n          };\n          companies.push(info);\n        });\n      }).catch(err => setError(err)).finally(() => getRandomNames());\n    };\n\n    const item = () => {\n      fetch('/api/get-items').then(res => res.json()).then(data => {\n        data.data.map(product => {\n          const info = {\n            category: product.category,\n            id: product._id\n          };\n\n          if (brands.category.includes(product.category)) {\n            console.log(\"hi\");\n          }\n        });\n      }).catch(err => setError(err));\n    };\n\n    brand();\n    item();\n  }, []); //similar to the other use effect but now its finding the unique categories from items\n  // useEffect(() => {\n  //     fetch('/api/get-items')\n  //     .then(res => res.json())\n  //     .then(data => {\n  //         console.log(data)\n  //         })\n  //     })\n  //     .catch(err => setError(err))\n  //     // .finally(() => getRandomNames())\n  // }, [])\n  // gets the value of what the user is typing in the search bar \n\n  const getValue = event => {\n    setTypedValue(event.target.value);\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: \"Error!!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Top, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADD LOGO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search (icon)\",\n        value: typedValue,\n        onChange: getValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topLinkDiv\",\n        children: [/*#__PURE__*/_jsxDEV(TopLinks, {\n          className: \"signin\",\n          to: \"/signin\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TopLinks, {\n          to: \"/cart\",\n          children: \"Add icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TopLinks, {\n          to: \"/wishlist\",\n          children: \"Add icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      children: [/*#__PURE__*/_jsxDEV(NavLinks, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavLinks, {\n        to: \"/products\",\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle\",\n          children: \"Brands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdownMenu\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"links\",\n            children: companyArray.map(company => {\n              return company;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle\",\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdownMenu\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"links\",\n            children: [/*#__PURE__*/_jsxDEV(NavLinks, {\n              to: \"/\",\n              children: \"category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavLinks, {\n              to: \"/\",\n              children: \"category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"lwDOt+YtSOktpVv7zVG8WEoStNI=\");\n\n_c = Header;\nconst Wrapper = styled.div`\n    font-size: 1.3vw;\n`;\n_c2 = Wrapper;\nconst Top = styled.div`\n    padding-top: 2vw;\n    padding-left: 40px;\n    width: 90%;\n    margin: auto;\n    height: 8vw;\n    align-items: baseline;\n    display: grid;\n    grid-template-columns: 0.5fr .8fr .8fr ;\n    gap: 2vw;\n    font-size: 1.4vw;\n\n    input{\n        height: 2.3vw;\n        padding-left: 1vw;\n        font-size: 1.4vw;\n        border-radius: var(--border-radius);\n        border: var(--border);\n        margin-right: 2vw;\n    }\n    input:focus{\n        outline: none;\n    }\n\n    .topLinkDiv{\n        margin-left: 1vw;\n        padding-left: 1vw;\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr ;\n        gap: 1vw;\n    }\n    .signin{\n        border-right: var(--border);\n        padding-left: 15px;\n    }\n`;\n_c3 = Top;\nconst TopLinks = styled(Link)`\n    color: var(--primary-colour);\n    text-decoration: none;\n    \n`;\n_c4 = TopLinks;\nconst Nav = styled.div`\n    padding-top: 2vw;\n    width: 90%;\n    height: 3vw;\n    margin: auto;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    border-top: var(--border);\n`;\n_c5 = Nav;\nconst NavLinks = styled(Link)`\n    color: var(--primary-colour);\n    text-decoration: none;\n`;\n_c6 = NavLinks;\nconst Dropdown = styled.div`\n    position: relative;\n    display: inline-block;\n    .toggle{\n        border: none;\n        background-color: white;\n        font-size: 1.3vw;\n        color: var(--primary-colour);\n        font-family: var(--primary-family);\n    }\n    .dropdownMenu{\n        display: none;\n        position: absolute;\n        z-index: 1;\n        width: 20vw;\n        border: var(--border);\n        border-top: none;\n        padding: 1.2vw;\n        margin-left: -5vw;\n        background-color: white;\n    }\n    .links{\n        display: grid;\n    }\n    &&:hover .dropdownMenu{\n        display: block;\n    }\n`;\n_c7 = Dropdown;\nexport default Header;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Top\");\n$RefreshReg$(_c4, \"TopLinks\");\n$RefreshReg$(_c5, \"Nav\");\n$RefreshReg$(_c6, \"NavLinks\");\n$RefreshReg$(_c7, \"Dropdown\");","map":{"version":3,"sources":["/Users/mayaesar/Documents/concordia-bootcamps/Projects/project-GROUP-e-commerce/client/src/components/Header.js"],"names":["styled","Link","useEffect","useState","Header","typedValue","setTypedValue","error","setError","companyArray","setCompanyArray","companies","brandArray","setBrandArray","brands","getRandomNames","random","push","Math","floor","length","forEach","element","item","id","name","arr","brand","fetch","then","res","json","data","map","company","info","_id","catch","err","finally","product","category","includes","console","log","getValue","event","target","value","Wrapper","div","Top","TopLinks","Nav","NavLinks","Dropdown"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst Header = () => {\n    const [typedValue, setTypedValue] = useState('')\n    const [error, setError] = useState(null)\n    const [companyArray, setCompanyArray] = useState([])\n    const companies = [];\n    const [brandArray, setBrandArray] = useState([])\n    const brands = [];\n\n    //randomly give 5 companies to be displayed for the brands dropdown\n    const getRandomNames = () => {\n        const random = [];\n        random.push(companies[Math.floor(Math.random()*companies.length)]);\n        random.push(companies[Math.floor(Math.random()*companies.length)]);\n        random.push(companies[Math.floor(Math.random()*companies.length)]);\n        random.push(companies[Math.floor(Math.random()*companies.length)]);\n        random.push(companies[Math.floor(Math.random()*companies.length)]);\n        random.forEach(element => {\n            const item = <NavLinks key={element.id} to={`/brands/${element.id}`}>{element.name}</NavLinks>;\n            setCompanyArray((arr) => [...arr, item])\n        });\n    }\n    //this will get all of the names and id of the companies, then store it in the companies array\n    // then do the same for the products but creates an array with categories\n    useEffect(() => {\n        const brand = () => {\n            fetch('/api/get-companies')\n            .then(res => res.json())\n            .then(data => {\n                data.data.map(company =>{\n                    const info = {\n                        name: company.name,\n                        id: company._id\n                    }\n                    companies.push(info);\n                })\n            })\n            .catch(err => setError(err))\n            .finally(() => getRandomNames())\n        };\n        const item = () => {\n            fetch('/api/get-items')\n            .then(res => res.json())\n            .then(data => {\n                data.data.map(product => {\n                    const info = {\n                        category: product.category,\n                        id: product._id\n                    }\n                    if(brands.category.includes(product.category)){\n                        console.log(\"hi\")\n                    }\n                })\n            })\n            .catch(err => setError(err))\n        };\n        brand();\n        item();\n    }, [])\n\n//similar to the other use effect but now its finding the unique categories from items\n    // useEffect(() => {\n    //     fetch('/api/get-items')\n    //     .then(res => res.json())\n    //     .then(data => {\n    //         console.log(data)\n    //         })\n    //     })\n    //     .catch(err => setError(err))\n    //     // .finally(() => getRandomNames())\n    // }, [])\n\n\n    // gets the value of what the user is typing in the search bar \n    const getValue = (event) => {\n        setTypedValue(event.target.value);\n    }\n\n    if(error){\n        return(\n            <Wrapper>\n                Error!!!! \n                {}\n            </Wrapper>\n        )\n    }\n    return(\n        <Wrapper>\n            <Top>\n                <h1>ADD LOGO</h1>\n                <input type=\"text\" placeholder=\"Search (icon)\" value={typedValue} onChange={getValue}/>\n                <div className=\"topLinkDiv\">\n                    <TopLinks className=\"signin\" to='/signin'>Sign in</TopLinks>\n                    <TopLinks to='/cart'>Add icon</TopLinks>\n                    <TopLinks to='/wishlist'>Add icon</TopLinks>\n                </div>\n            </Top>\n            <Nav>\n                <NavLinks to=\"/\" >Home</NavLinks>\n                <NavLinks to='/products'>Products</NavLinks>\n                <Dropdown>\n                    <button className=\"toggle\">Brands</button>\n                    <div className=\"dropdownMenu\">\n                        <div className=\"links\">\n                            {/* this will display 5 random brands */}\n                            {companyArray.map(company => {\n                                return company;\n                            })}\n                        </div>\n                    </div>\n                </Dropdown>\n                <Dropdown>\n                    <button className=\"toggle\">Categories</button>\n                    <div className=\"dropdownMenu\">\n                        <div className=\"links\">\n                            <NavLinks to='/'>category</NavLinks>\n                            <NavLinks to='/'>category</NavLinks>\n                        </div>\n                    </div>\n                </Dropdown>\n            </Nav>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    font-size: 1.3vw;\n`;\nconst Top = styled.div`\n    padding-top: 2vw;\n    padding-left: 40px;\n    width: 90%;\n    margin: auto;\n    height: 8vw;\n    align-items: baseline;\n    display: grid;\n    grid-template-columns: 0.5fr .8fr .8fr ;\n    gap: 2vw;\n    font-size: 1.4vw;\n\n    input{\n        height: 2.3vw;\n        padding-left: 1vw;\n        font-size: 1.4vw;\n        border-radius: var(--border-radius);\n        border: var(--border);\n        margin-right: 2vw;\n    }\n    input:focus{\n        outline: none;\n    }\n\n    .topLinkDiv{\n        margin-left: 1vw;\n        padding-left: 1vw;\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr ;\n        gap: 1vw;\n    }\n    .signin{\n        border-right: var(--border);\n        padding-left: 15px;\n    }\n`;\nconst TopLinks = styled(Link)`\n    color: var(--primary-colour);\n    text-decoration: none;\n    \n`;\nconst Nav = styled.div`\n    padding-top: 2vw;\n    width: 90%;\n    height: 3vw;\n    margin: auto;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    border-top: var(--border);\n`;\nconst NavLinks = styled(Link)`\n    color: var(--primary-colour);\n    text-decoration: none;\n`;\nconst Dropdown = styled.div`\n    position: relative;\n    display: inline-block;\n    .toggle{\n        border: none;\n        background-color: white;\n        font-size: 1.3vw;\n        color: var(--primary-colour);\n        font-family: var(--primary-family);\n    }\n    .dropdownMenu{\n        display: none;\n        position: absolute;\n        z-index: 1;\n        width: 20vw;\n        border: var(--border);\n        border-top: none;\n        padding: 1.2vw;\n        margin-left: -5vw;\n        background-color: white;\n    }\n    .links{\n        display: grid;\n    }\n    &&:hover .dropdownMenu{\n        display: block;\n    }\n`;\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}