{"ast":null,"code":"var _jsxFileName = \"/Users/mayaesar/Documents/concordia-bootcamps/Projects/project-GROUP-e-commerce/client/src/components/UserActionContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useContext } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserActionContext = /*#__PURE__*/createContext(null);\nexport const UserActionProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    cart,\n    setCart,\n    wishlist,\n    setWishlist,\n    setIsErr,\n    setIsItemsUpdated,\n    isErr\n  } = useContext(UserContext);\n  const [cartDetails, setCartDetails] = useState(null);\n  const [wishlistDetails, setWishlistDetails] = useState(null); // To get item details of cart or wishlist\n  // This function takes two parameters to update the state\n  //  - arrName : cart or wishlist\n  //  - setDetails : cartDetails or wishlistDetails\n\n  const getItemDetails = (arrName, setDetails) => {\n    const items = arrName.map(item => item._id);\n    const promises = [];\n    items.forEach(item => {\n      promises.push(fetch(`/api/get-item/${item}`).then(res => res.json()).then(data => data.data));\n    });\n    Promise.all(promises).then(result => setDetails(result));\n  }; // To update cart and/or wishlist\n\n\n  const updateUserData = async obj => {\n    // obj[_id] = userId;\n    obj['_id'] = '460d7e55-fab0-48de-9c07-f61b222bfab6';\n\n    try {\n      const res = await fetch('/api/update-user', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(obj)\n      });\n      const data = await res.json();\n      console.log(data); // To get updated cart and wishlist\n\n      if (data.status !== 200) return setIsErr(true);\n      setCart(data.data.cart);\n      setWishlist(data.data.wishlist);\n    } catch (err) {\n      setIsErr(err);\n    } finally {\n      !isErr && setIsItemsUpdated(true);\n    }\n  }; // To add an item to cart\n  // This function will be passed to Wishlist and ProductDetails component\n\n\n  const addItem = item => {\n    console.log('ADD TO CART');\n    setIsItemsUpdated(false);\n    updateUserData({\n      cart: [...cart, item]\n    });\n  };\n\n  let updatedCart = []; // To update qty\n\n  const updateQty = item => {\n    console.log('UPDATE QTY');\n    console.log({\n      item\n    });\n    setIsItemsUpdated(false);\n    const index = cart.findIndex(obj => obj._id === item._id);\n    console.log(index);\n    cart.splice(index, 1, item);\n    console.log(\"updated\", cart);\n    updateUserData({\n      cart: [cart]\n    });\n  }; // To delete an item from cart\n\n\n  const deleteItem = item => {\n    console.log('DELETE ITEM');\n    console.log({\n      item\n    });\n    setIsItemsUpdated(false);\n    updatedCart = cart.filter(obj => obj._id !== item._id);\n    updateUserData({\n      cart: updatedCart\n    });\n  }; // To add an item to wishlist and delete it from cart\n\n\n  const saveForLater = item => {\n    console.log('SAVE FOR LATER');\n    console.log({\n      item\n    });\n    setIsItemsUpdated(false);\n    console.log(cart);\n    updatedCart = cart.filter(obj => obj._id !== item._id);\n    updateUserData({\n      cart: updatedCart,\n      wishlist: [...wishlist, {\n        _id: item._id\n      }]\n    });\n  }; // To add an item to wishlist\n\n\n  const addToWishlist = item => {\n    console.log('ADD TO WISHLIST');\n    console.log({\n      item\n    });\n    setIsItemsUpdated(false);\n    updateUserData({\n      wishlist: [...wishlist, item]\n    });\n  };\n\n  let updatedWishlist = []; // To delete an item from wishlist\n\n  const deleteFromWishlist = item => {\n    console.log('DELETE FROM WISHLIST');\n    console.log({\n      item\n    });\n    setIsItemsUpdated(false);\n    updatedWishlist = wishlist.filter(obj => obj._id !== item._id);\n    updateUserData({\n      wishlist: updatedWishlist\n    });\n  }; // To add an item to cart and remove it from wishlist\n\n\n  const moveToCart = item => {\n    console.log('MOVE TO CART');\n    console.log({\n      item\n    });\n    setIsItemsUpdated(false);\n    updatedWishlist = wishlist.filter(obj => obj._id !== item._id);\n    updateUserData({\n      cart: [...cart, item],\n      wishlist: updatedWishlist\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserActionContext.Provider, {\n    value: {\n      deleteItem,\n      addItem,\n      updateQty,\n      saveForLater,\n      addToWishlist,\n      deleteFromWishlist,\n      moveToCart,\n      getItemDetails,\n      cart,\n      cartDetails,\n      setCartDetails,\n      wishlist,\n      wishlistDetails,\n      setWishlistDetails\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserActionProvider, \"5QH4jDTFhkIpwx7YxnQcNoG4Fos=\");\n\n_c = UserActionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserActionProvider\");","map":{"version":3,"sources":["/Users/mayaesar/Documents/concordia-bootcamps/Projects/project-GROUP-e-commerce/client/src/components/UserActionContext.js"],"names":["createContext","useState","useContext","UserContext","UserActionContext","UserActionProvider","children","cart","setCart","wishlist","setWishlist","setIsErr","setIsItemsUpdated","isErr","cartDetails","setCartDetails","wishlistDetails","setWishlistDetails","getItemDetails","arrName","setDetails","items","map","item","_id","promises","forEach","push","fetch","then","res","json","data","Promise","all","result","updateUserData","obj","method","headers","body","JSON","stringify","console","log","status","err","addItem","updatedCart","updateQty","index","findIndex","splice","deleteItem","filter","saveForLater","addToWishlist","updatedWishlist","deleteFromWishlist","moveToCart"],"mappings":"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","sourcesContent":["import { createContext, useState, useContext } from \"react\";\nimport { UserContext } from \"./UserContext\";\n\nexport const UserActionContext = createContext(null);\n\nexport const UserActionProvider = ({ children }) => {\n    const { cart, \n            setCart, \n            wishlist, \n            setWishlist, \n            setIsErr, \n            setIsItemsUpdated,\n            isErr,\n            } \n            = useContext(UserContext);\n    const [cartDetails, setCartDetails] = useState(null);\n    const [wishlistDetails, setWishlistDetails] = useState(null);\n\n    // To get item details of cart or wishlist\n    // This function takes two parameters to update the state\n    //  - arrName : cart or wishlist\n    //  - setDetails : cartDetails or wishlistDetails\n    const getItemDetails = (arrName, setDetails) => {\n        const items = arrName.map(item => item._id)\n        const promises = [];\n        items.forEach(item => {\n            promises.push(\n                fetch(`/api/get-item/${item}`)\n                .then(res => res.json())\n                .then(data => data.data)\n            )\n        })\n        Promise.all(promises).then((result) => setDetails(result))\n    }\n\n    // To update cart and/or wishlist\n    const updateUserData = async (obj) => {\n        // obj[_id] = userId;\n        obj['_id'] = '460d7e55-fab0-48de-9c07-f61b222bfab6';\n        try {\n            const res = await fetch('/api/update-user', {\n                method: 'PATCH', \n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                },\n                body: JSON.stringify(obj)\n                })\n            const data = await res.json();\n            console.log(data)\n            // To get updated cart and wishlist\n            if(data.status !== 200) return setIsErr(true);\n            setCart(data.data.cart)\n            setWishlist(data.data.wishlist)\n        } catch (err) {\n            setIsErr(err)\n        } finally {\n            !isErr && setIsItemsUpdated(true)\n        }\n    }\n\n    // To add an item to cart\n    // This function will be passed to Wishlist and ProductDetails component\n    const addItem = (item) => {\n        console.log('ADD TO CART')\n        setIsItemsUpdated(false)\n        updateUserData({cart: [...cart, item]});\n    }\n\n    let updatedCart = [];\n\n    // To update qty\n    const updateQty = (item) => {\n        console.log('UPDATE QTY')\n        console.log({item})\n        setIsItemsUpdated(false)\n        const index = cart.findIndex(obj => obj._id === item._id)\n        console.log(index)\n        cart.splice(index, 1, item)\n        console.log(\"updated\",cart)\n        updateUserData({cart: [cart]});\n    }\n\n    // To delete an item from cart\n    const deleteItem = (item) => {\n        console.log('DELETE ITEM')\n        console.log({item})\n        setIsItemsUpdated(false)\n        updatedCart =cart.filter(obj => obj._id !== item._id)\n        updateUserData({cart: updatedCart});\n    }\n\n    // To add an item to wishlist and delete it from cart\n    const saveForLater = (item) => {\n        console.log('SAVE FOR LATER')\n        console.log({item})\n        setIsItemsUpdated(false)\n        console.log(cart)\n        updatedCart = cart.filter(obj => obj._id !== item._id)\n        updateUserData({cart: updatedCart, wishlist: [...wishlist, {_id: item._id}]});\n    }\n\n    // To add an item to wishlist\n    const addToWishlist = (item) => {\n        console.log('ADD TO WISHLIST')\n        console.log({item})\n        setIsItemsUpdated(false)\n        updateUserData({wishlist: [...wishlist, item]});\n    }\n\n    let updatedWishlist = [];\n\n    // To delete an item from wishlist\n    const deleteFromWishlist = (item) => {\n        console.log('DELETE FROM WISHLIST')\n        console.log({item})\n        setIsItemsUpdated(false)\n        updatedWishlist = wishlist.filter(obj => obj._id !== item._id)\n        updateUserData({wishlist: updatedWishlist});\n    }\n\n    // To add an item to cart and remove it from wishlist\n    const moveToCart = (item) => {\n        console.log('MOVE TO CART')\n        console.log({item})\n        setIsItemsUpdated(false)\n        updatedWishlist = wishlist.filter(obj => obj._id !== item._id)\n        updateUserData({cart:[...cart, item] ,wishlist : updatedWishlist})\n    }\n\n    return (\n        <UserActionContext.Provider \n            value={{deleteItem, \n                    addItem, \n                    updateQty,\n                    saveForLater, \n                    addToWishlist, \n                    deleteFromWishlist, \n                    moveToCart,\n                    getItemDetails,\n                    cart, \n                    cartDetails,\n                    setCartDetails,\n                    wishlist,\n                    wishlistDetails,\n                    setWishlistDetails,\n                    }}\n                    >\n            {children}\n        </UserActionContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}