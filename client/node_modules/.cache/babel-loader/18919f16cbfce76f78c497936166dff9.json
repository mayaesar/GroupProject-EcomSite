{"ast":null,"code":"var _jsxFileName = \"/Users/mayaesar/Documents/concordia-bootcamps/Projects/project-GROUP-e-commerce/client/src/components/signin/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { UserContext } from \"../UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    setUserId\n  } = useContext(UserContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [isError, setIsError] = useState(false); // handle the email inside the form\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  }; // we don't have any endpoint to validate password currently\n\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  }; // use the email that user already entered to get the user id to fetch data\n  // This is not a normal operation, but we currently don't have a endpoint to validate email\n  // We can only pretend we can log in by entering a exist email\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(`/api/get-user/${email}`);\n      const json = await response.json();\n\n      if (response.ok) {\n        window.localStorage.setItem(\"user-id\", json.data._id);\n        setUserId(json.data._id);\n        navigate(\"/\");\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: email,\n        onChange: handleEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Error, {\n        isError: isError,\n        children: \"User not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        value: password,\n        onChage: handlePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ayPJpXZlZegcK/pPPaoR9UXsNxg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nconst Wrapper = styled.div`\n  input {\n    width: 100%;\n    padding: 10px;\n    font-size: 1rem;\n    border-radius: 8px;\n    box-sizing: border-box;\n    border: var(--border);\n    margin-bottom: 20px;\n  }\n`;\n_c2 = Wrapper;\nconst Button = styled.button`\n  background-color: white;\n  border: var(--border);\n  border-radius: 8px;\n  box-sizing: border-box;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 1rem;\n  font-weight: 600;\n  line-height: 20px;\n  margin-right: 20px;\n  padding: 8px 20px;\n  text-align: center;\n  transition: box-shadow 0.2s, -ms-transform 0.1s, -webkit-transform 0.1s,\n    transform 0.1s;\n  min-width: 10%;\n  &:focus-visible {\n    box-shadow: #222222 0 0 0 2px, white 0 0 0 4px;\n    transition: box-shadow 0.2s;\n  }\n  &:active {\n    background-color: white;\n    border-color: black;\n    transform: scale(0.96);\n  }\n`;\n_c3 = Button;\nconst Error = styled.p`\n  display: ${props => props.isError ? \"block\" : \"none\"};\n  color: red;\n  margin-bottom: 20px;\n`;\n_c4 = Error;\nexport default Login;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Error\");","map":{"version":3,"sources":["/Users/mayaesar/Documents/concordia-bootcamps/Projects/project-GROUP-e-commerce/client/src/components/signin/Login.js"],"names":["useState","useContext","useEffect","styled","UserContext","useNavigate","Login","navigate","setUserId","email","setEmail","password","setPassword","isError","setIsError","handleEmail","e","target","value","handlePassword","handleSubmit","preventDefault","response","fetch","json","ok","window","localStorage","setItem","data","_id","error","Wrapper","div","Button","button","Error","p","props"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { UserContext } from \"../UserContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const { setUserId } = useContext(UserContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [isError, setIsError] = useState(false);\n\n  // handle the email inside the form\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  // we don't have any endpoint to validate password currently\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  // use the email that user already entered to get the user id to fetch data\n  // This is not a normal operation, but we currently don't have a endpoint to validate email\n  // We can only pretend we can log in by entering a exist email\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(`/api/get-user/${email}`);\n      const json = await response.json();\n\n      if (response.ok) {\n        window.localStorage.setItem(\"user-id\", json.data._id);\n        setUserId(json.data._id);\n        navigate(\"/\");\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          required={true}\n          value={email}\n          onChange={handleEmail}\n        />\n        <Error isError={isError}>User not found</Error>\n\n        <label>Password:</label>\n        <input\n          type=\"password\"\n          required={true}\n          value={password}\n          onChage={handlePassword}\n        />\n        <Button type=\"submit\">Log In</Button>\n      </form>\n    </Wrapper>\n  );\n};\nconst Wrapper = styled.div`\n  input {\n    width: 100%;\n    padding: 10px;\n    font-size: 1rem;\n    border-radius: 8px;\n    box-sizing: border-box;\n    border: var(--border);\n    margin-bottom: 20px;\n  }\n`;\nconst Button = styled.button`\n  background-color: white;\n  border: var(--border);\n  border-radius: 8px;\n  box-sizing: border-box;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 1rem;\n  font-weight: 600;\n  line-height: 20px;\n  margin-right: 20px;\n  padding: 8px 20px;\n  text-align: center;\n  transition: box-shadow 0.2s, -ms-transform 0.1s, -webkit-transform 0.1s,\n    transform 0.1s;\n  min-width: 10%;\n  &:focus-visible {\n    box-shadow: #222222 0 0 0 2px, white 0 0 0 4px;\n    transition: box-shadow 0.2s;\n  }\n  &:active {\n    background-color: white;\n    border-color: black;\n    transform: scale(0.96);\n  }\n`;\n\nconst Error = styled.p`\n  display: ${(props) => (props.isError ? \"block\" : \"none\")};\n  color: red;\n  margin-bottom: 20px;\n`;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}