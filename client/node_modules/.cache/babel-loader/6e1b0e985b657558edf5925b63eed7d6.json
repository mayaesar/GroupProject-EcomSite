{"ast":null,"code":"var _jsxFileName = \"/Users/mayaesar/Documents/concordia-bootcamps/Projects/project-GROUP-e-commerce/client/src/components/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userId, setUserId] = useState(JSON.parse(window.localStorage.getItem(\"user-id\"))); // user will store firstName, lastName, email, address and order\n\n  const [user, setUser] = useState(null);\n  const [cart, setCart] = useState(null);\n  const [wishlist, setWishlist] = useState(null);\n  const [isErr, setIsErr] = useState(false);\n  const [isItemsUpdated, setIsItemsUpdated] = useState(false);\n  console.log({\n    userId\n  }); // To get current user info\n\n  const getUserData = async () => {\n    try {\n      const res = await fetch(`/api/get-user/${userId}`); // const res = await fetch('/api/get-user/460d7e55-fab0-48de-9c07-f61b222bfab6');\n\n      const data = await res.json();\n      const userData = data.data;\n      setCart(userData.cart);\n      setWishlist(userData.wishList);\n      console.log(\"!!!!!\", userData.cart);\n      const filteredUserData = Object.fromEntries(Object.entries(userData).filter(_ref2 => {\n        let [key, value] = _ref2;\n        return key !== 'cart' && key !== 'wishlist';\n      }));\n      setUser(filteredUserData);\n      setIsItemsUpdated(true);\n    } catch (err) {\n      setIsErr(true);\n    }\n  }; ///////////////// need to lookinto this block. For now, see line 6 [userId, setUserId] for a quick fix\n  // useEffect(() => {                      \n  //   const getUserId = () => {\n  //   const extractedInfo = window.localStorage.getItem(\"user-id\");\n  //   return extractedInfo && JSON.parse(extractedInfo);\n  //   };\n  //   setUserId(getUserId());\n  //   setIsErr(false);\n  //   setIsItemsUpdated(false);\n  // }, []);\n\n\n  useEffect(() => {\n    getUserData();\n    setIsErr(false);\n    setIsItemsUpdated(false);\n  }, [, userId]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userId,\n      setUserId,\n      user,\n      cart,\n      setCart,\n      wishlist,\n      setWishlist,\n      getUserData,\n      isErr,\n      setIsErr,\n      isItemsUpdated,\n      setIsItemsUpdated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"Fe/4hEWjgAdmrCSshjKXS6TyLzs=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/mayaesar/Documents/concordia-bootcamps/Projects/project-GROUP-e-commerce/client/src/components/UserContext.js"],"names":["createContext","useEffect","useState","UserContext","UserProvider","children","userId","setUserId","JSON","parse","window","localStorage","getItem","user","setUser","cart","setCart","wishlist","setWishlist","isErr","setIsErr","isItemsUpdated","setIsItemsUpdated","console","log","getUserData","res","fetch","data","json","userData","wishList","filteredUserData","Object","fromEntries","entries","filter","key","value","err"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,IAAD,CAAjC;AAEP,OAAO,MAAMI,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACM,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAX,CAAD,CAApC,CAD4C,CAE5C;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,KAAD,CAApD;AAEAqB,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAClB,IAAAA;AAAD,GAAZ,EAT4C,CAW5C;;AACA,QAAMmB,WAAW,GAAG,YAAY;AAC9B,QAAI;AACJ,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,iBAAgBrB,MAAO,EAAzB,CAAvB,CADI,CAEJ;;AACA,YAAMsB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,YAAMC,QAAQ,GAAGF,IAAI,CAACA,IAAtB;AACAZ,MAAAA,OAAO,CAACc,QAAQ,CAACf,IAAV,CAAP;AACAG,MAAAA,WAAW,CAACY,QAAQ,CAACC,QAAV,CAAX;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,QAAQ,CAACf,IAA9B;AACA,YAAMiB,gBAAgB,GAAGC,MAAM,CAACC,WAAP,CAAmBD,MAAM,CAACE,OAAP,CAAeL,QAAf,EACjBM,MADiB,CACV;AAAA,YAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;AAAA,eAAkBD,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,UAA5C;AAAA,OADU,CAAnB,CAAzB;AAEAvB,MAAAA,OAAO,CAACkB,gBAAD,CAAP;AACAV,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACC,KAZD,CAYE,OAAOiB,GAAP,EAAY;AACZnB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAhBD,CAZ4C,CA8B5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAnB,EAAAA,SAAS,CAAC,MAAK;AACbwB,IAAAA,WAAW;AACXL,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAJQ,EAIN,GAAGhB,MAAH,CAJM,CAAT;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAF;AACEC,MAAAA,SADF;AAEEM,MAAAA,IAFF;AAGEE,MAAAA,IAHF;AAIEC,MAAAA,OAJF;AAKEC,MAAAA,QALF;AAMEC,MAAAA,WANF;AAOEO,MAAAA,WAPF;AAQEN,MAAAA,KARF;AASEC,MAAAA,QATF;AAUEC,MAAAA,cAVF;AAWEC,MAAAA;AAXF,KAA7B;AAAA,cAaGjB;AAbH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhEM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nexport const UserContext = createContext(null);\n\nexport const UserProvider = ({ children }) => {\n  const [userId, setUserId] = useState(JSON.parse(window.localStorage.getItem(\"user-id\")));\n  // user will store firstName, lastName, email, address and order\n  const [user, setUser] = useState(null);\n  const [cart, setCart] = useState(null);\n  const [wishlist, setWishlist] = useState(null);\n  const [isErr, setIsErr] = useState(false);\n  const [isItemsUpdated, setIsItemsUpdated] = useState(false); \n\n  console.log({userId})\n\n  // To get current user info\n  const getUserData = async () => {\n    try {\n    const res = await fetch(`/api/get-user/${userId}`);\n    // const res = await fetch('/api/get-user/460d7e55-fab0-48de-9c07-f61b222bfab6');\n    const data = await res.json();\n    const userData = data.data\n    setCart(userData.cart);\n    setWishlist(userData.wishList);\n    console.log(\"!!!!!\", userData.cart)\n    const filteredUserData = Object.fromEntries(Object.entries(userData)\n                              .filter(([key, value]) => key !== 'cart' && key !== 'wishlist'));\n    setUser(filteredUserData);\n    setIsItemsUpdated(true);\n    } catch (err) {\n      setIsErr(true);\n    }\n  }\n\n  ///////////////// need to lookinto this block. For now, see line 6 [userId, setUserId] for a quick fix\n  // useEffect(() => {                      \n  //   const getUserId = () => {\n  //   const extractedInfo = window.localStorage.getItem(\"user-id\");\n  //   return extractedInfo && JSON.parse(extractedInfo);\n  //   };\n  //   setUserId(getUserId());\n  //   setIsErr(false);\n  //   setIsItemsUpdated(false);\n  // }, []);\n\n  useEffect(() =>{\n    getUserData();\n    setIsErr(false);\n    setIsItemsUpdated(false);\n  }, [ ,userId])\n\n  return (\n    <UserContext.Provider value={{ userId, \n                                   setUserId,\n                                   user, \n                                   cart, \n                                   setCart, \n                                   wishlist, \n                                   setWishlist,\n                                   getUserData,\n                                   isErr,\n                                   setIsErr,\n                                   isItemsUpdated, \n                                   setIsItemsUpdated,\n                                    }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}